---
- name: create .docker directory
  become: true
  become_user: "{{ app_user }}"
  file: path=/home/{{ app_user }}/.docker state=directory mode=0755

- name: copy cluster CA certificate
  become: true
  become_user: "{{ app_user }}"
  copy:
    src: ../keys/{{ os_prefix }}/cluster_ca.cert.pem
    dest: /home/{{ app_user }}/.docker/ca.pem
    mode: 0644
  notify:
  - restart frontend job queue service

- name: copy docker client TLS certificate
  become: true
  become_user: "{{ app_user }}"
  copy:
    src:
      ../keys/{{ os_prefix }}/cluster_docker_client.cert.pem
    dest: /home/{{ app_user }}/.docker/cert.pem
    mode: 0644
  notify:
  - restart frontend job queue service

- name: copy docker client TLS key
  become: true
  become_user: "{{ app_user }}"
  copy:
    src:
      ../keys/{{ os_prefix }}/cluster_docker_client.key.pem
    dest: /home/{{ app_user }}/.docker/key.pem
    mode: 0600
    owner: "{{ app_user }}"
    group: "{{ app_user }}"
  notify:
  - restart frontend job queue service

- name: add DOCKER_TLS_VERIFY to .bashrc
  become: true
  become_user: "{{ app_user }}"
  lineinfile:
    dest: /home/{{ app_user }}/.bashrc
    line: export DOCKER_TLS_VERIFY=1
    regexp: "^export DOCKER_TLS_VERIFY=.*"
  notify:
  - restart frontend job queue service

- name: add DOCKER_HOST to .bashrc
  become: true
  become_user: "{{ app_user }}"
  lineinfile:
    dest: /home/{{ app_user }}/.bashrc
    line: export DOCKER_HOST=tcp://swarm-master1.skydns.local:3376
    regexp: "^export DOCKER_HOST=.*"
  notify:
  - restart frontend job queue service

- name: add DOCKER_CERT_PATH to .bashrc
  become: true
  become_user: "{{ app_user }}"
  lineinfile:
    dest: /home/{{ app_user }}/.bashrc
    line: "export DOCKER_CERT_PATH=/home/{{ app_user }}/.docker"
    regexp: "^export DOCKER_CERT_PATH=.*"
  notify:
  - restart frontend job queue service
