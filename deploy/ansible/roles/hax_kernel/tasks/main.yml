---
# Installs the most recent Kernel build in a specified Fedora branch.
#
# This hack gives us the 4.2 kernel on Fedora 22. We need 4.2 to see if it
# solves docker+overlayfs issues.

- block:
  - name: install koji tools
    dnf: name=fedora-packager state=present

  - name: create koji_kernel directory
    file: path=/root/koji_kernel state=directory

  - name: get the latest kernel firmware version from {{ hax_kernel_tag }}
    command: koji latest-build {{ hax_kernel_tag }} linux-firmware --quiet
    register: koji_latest_firmware_build_result
    changed_when: False

  - name: get the latest kernel version from {{ hax_kernel_tag }}
    when: ansible_pkg_mgr == 'dnf'
    become: true
    become_user: root
    command: koji latest-build {{ hax_kernel_tag }} kernel --quiet
    register: koji_latest_kernel_build_result
    changed_when: False

  - name: find the desired kernel firmware
    when: ansible_pkg_mgr == 'dnf'
    set_fact:
      # NOTE: The desired build name is the first word in the output.
      hax_firmware_version: "{{ koji_latest_firmware_build_result.stdout |
                                regex_replace(' .*\\Z', '') }}"

  - name: find the desired kernel
    when: ansible_pkg_mgr == 'dnf'
    set_fact:
      # NOTE: The desired build name is the first word in the output.
      hax_kernel_version: "{{ koji_latest_kernel_build_result.stdout |
                              regex_replace(' .*\\Z', '') }}"

  - name: create directory for the desired kernel
    when: ansible_pkg_mgr == 'dnf'
    become: true
    become_user: root
    file: path=/root/koji_kernel/{{ hax_kernel_version }} state=directory

  - name: get the kernel firmware from koji
    when: ansible_pkg_mgr == 'dnf'
    become: true
    become_user: root
    # NOTE: The kernel firmware packages are architecture-agnostic.
    command: >
      koji download-build --quiet --arch=noarch {{ hax_firmware_version }}
    args:
      chdir: /root/koji_kernel/{{ hax_kernel_version }}

  - name: get the 4.2 kernel from koji
    when: ansible_pkg_mgr == 'dnf'
    become: true
    become_user: root
    command: >
      koji download-build --quiet --arch={{ ansible_architecture }}
      {{ hax_kernel_version }}
    args:
      chdir: /root/koji_kernel/{{ hax_kernel_version }}

  - name: list the downloaded kernel and firmware packages
    when: ansible_pkg_mgr == 'dnf'
    become: true
    become_user: root
    find:
      paths: /root/koji_kernel/{{ hax_kernel_version }}
      patterns:
      - "*.noarch.rpm"  # Firmware files.
      - "kernel-*.rpm"  # Kernel files minus perf.
    register: hax_kernel_package_files

  - name: install the downloaded kernel packages
    when: ansible_pkg_mgr == 'dnf'
    become: true
    become_user: root
    # NOTE: dnf doesn't appear to support package lists
    yum:
      name: "{{ hax_kernel_package_files.files | map(attribute='path') |
                join(',') }}"
      state: present
    notify:
    - reboot machine
    - wait for machine to come back up
    - reload facts after OS upgrade

  # NOTE: This makes sure that the machine reboots before Ansible proceeds to the
  #       next play.
  - meta: flush_handlers

  when: ansible_pkg_mgr == 'dnf' and hax_kernel_tag
  become: true
  become_user: root
